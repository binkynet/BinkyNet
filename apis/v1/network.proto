// Copyright 2020 Ewout Prangsma
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Author Ewout Prangsma
// 

syntax = "proto3";

package binkynet.v1;

option go_package = "github.com/binkynet/BinkyNet/apis/v1";
option csharp_namespace = "BinkyNet.Apis.V1";

import "types.proto";

// NetworkControlService is served by the network master and used by
// users of the Binky Network to control the network.
// Network masters make themselves available in mDNS under service type "_nwctrl._binkynet._tcp".
service NetworkControlService {
  // Power is used to send power requests and receive power request & actual changes.
  rpc Power(stream PowerState) returns (stream binkynet.v1.Power);

  // Locs is used to control locs and get changes in loc requests & actual state back.
  // Note: Loc.actual on incoming objects is ignored.
  rpc Locs(stream Loc) returns (stream Loc);

  // Sensors is used to receive a stream of actual sensor states.
  rpc Sensors(Empty) returns (stream Sensor);

  // Outputs is used to control outputs and get changes in output requests & actual state back.
  // Note: Output.actual on incoming objects is ignored.
  rpc Outputs(stream Output) returns (stream Output);

  // Switches is used to control switches and get changes in switch requests & actual state back.
  // Note: Switche.actual on incoming objects is ignored.
  rpc Switches(stream Switch) returns (stream Switch);

  // Clock is used to send clock requests and receive clock changes.
  rpc Clock(stream binkynet.v1.Clock) returns (stream binkynet.v1.Clock);
}
