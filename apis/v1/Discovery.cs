// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: discovery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BinkyNet.Apis.V1 {

  /// <summary>Holder for reflection information generated from discovery.proto</summary>
  public static partial class DiscoveryReflection {

    #region Descriptor
    /// <summary>File descriptor for discovery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiscoveryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9kaXNjb3ZlcnkucHJvdG8SC2Jpbmt5bmV0LnYxIlsKEU5ldHdvcmtNYXN0",
            "ZXJJbmZvEhMKC2FwaV92ZXJzaW9uGAEgASgJEg8KB3ZlcnNpb24YAiABKAkS",
            "EAoIYXBpX3BvcnQYAyABKAUSDgoGc2VjdXJlGAQgASgIKiQKBVBvcnRzEgsK",
            "B05PVFVTRUQQABIOCglESVNDT1ZFUlkQm0hCOVokZ2l0aHViLmNvbS9iaW5r",
            "eW5ldC9CaW5reU5ldC9hcGlzL3YxqgIQQmlua3lOZXQuQXBpcy5WMWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BinkyNet.Apis.V1.Ports), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BinkyNet.Apis.V1.NetworkMasterInfo), global::BinkyNet.Apis.V1.NetworkMasterInfo.Parser, new[]{ "ApiVersion", "Version", "ApiPort", "Secure" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Port number constants
  /// </summary>
  public enum Ports {
    [pbr::OriginalName("NOTUSED")] Notused = 0,
    /// <summary>
    /// Port of UDB discovery broadcasts.
    /// </summary>
    [pbr::OriginalName("DISCOVERY")] Discovery = 9243,
  }

  #endregion

  #region Messages
  /// <summary>
  /// NetworkMasterInfo messages are frequently broadcasted as UDP packets
  /// by the network master.
  /// </summary>
  public sealed partial class NetworkMasterInfo : pb::IMessage<NetworkMasterInfo> {
    private static readonly pb::MessageParser<NetworkMasterInfo> _parser = new pb::MessageParser<NetworkMasterInfo>(() => new NetworkMasterInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkMasterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BinkyNet.Apis.V1.DiscoveryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMasterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMasterInfo(NetworkMasterInfo other) : this() {
      apiVersion_ = other.apiVersion_;
      version_ = other.version_;
      apiPort_ = other.apiPort_;
      secure_ = other.secure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMasterInfo Clone() {
      return new NetworkMasterInfo(this);
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 1;
    private string apiVersion_ = "";
    /// <summary>
    /// API version of the network master.
    /// Currently v1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Version of the network master in semantic versioning format.
    /// E.g. 1.0.4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api_port" field.</summary>
    public const int ApiPortFieldNumber = 3;
    private int apiPort_;
    /// <summary>
    /// Port number on which the network master is serving all API services.
    /// Note: Address of the network master is found by inspecting the sender address
    /// of the UDP packet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiPort {
      get { return apiPort_; }
      set {
        apiPort_ = value;
      }
    }

    /// <summary>Field number for the "secure" field.</summary>
    public const int SecureFieldNumber = 4;
    private bool secure_;
    /// <summary>
    /// If set, the API is served over TLS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Secure {
      get { return secure_; }
      set {
        secure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkMasterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkMasterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiVersion != other.ApiVersion) return false;
      if (Version != other.Version) return false;
      if (ApiPort != other.ApiPort) return false;
      if (Secure != other.Secure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (ApiPort != 0) hash ^= ApiPort.GetHashCode();
      if (Secure != false) hash ^= Secure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApiVersion);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (ApiPort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApiPort);
      }
      if (Secure != false) {
        output.WriteRawTag(32);
        output.WriteBool(Secure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (ApiPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiPort);
      }
      if (Secure != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkMasterInfo other) {
      if (other == null) {
        return;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.ApiPort != 0) {
        ApiPort = other.ApiPort;
      }
      if (other.Secure != false) {
        Secure = other.Secure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ApiVersion = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 24: {
            ApiPort = input.ReadInt32();
            break;
          }
          case 32: {
            Secure = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
